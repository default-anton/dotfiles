priority -50

snippet tableflip "(╯°□°）╯︵ ┻━┻"
(╯°□°）╯︵ ┻━┻$0
endsnippet

snippet abspath "absolute path to the current file"
`!v expand('%:p')`
endsnippet

snippet date "Current date"
`!v strftime('%b %-d, %Y')`
endsnippet

snippet psentry "Get Sentry issue details"
The Sentry issue data can be retrieved by making a GET request to the Sentry API. Here’s how you can use `curl` to fetch the issue data:

\`\`\`bash
curl -X GET \
  -H "Authorization: Bearer $SENTRY_AUTH_TOKEN" \
  https://sentry.io/api/0/issues/<issue_id>/
\`\`\`

### Steps:
1. Replace \`<issue_id>\` with the numeric ID of the Sentry issue you want to retrieve.

If you want to fetch the hashes (and potentially the latest event data for stacktrace details), you can also use:

\`\`\`bash
curl -X GET \
  -H "Authorization: Bearer $SENTRY_AUTH_TOKEN" \
  https://sentry.io/api/0/issues/<issue_id>/hashes/
\`\`\`

This second endpoint will return the hashes associated with the issue, and from there, you can extract the \`latestEvent\` field to analyze the stacktrace.
endsnippet

snippet p3ps "What I've been working on"
Get links to features and requirements closed by me in the last week. Today is `!v strftime('%b %-d, %Y')`. Here is how the links look like: [Aha! feature/requirement](<you want to get this link>)

Example:

\`\`\`sh
gh pr list -R aha-app/aha-app --state closed --author @me --search "closed:2025-02-24..2025-03-02" --json number,title,closedAt,body
\`\`\`

Output:
- https://company.aha.io/features/AIT-260
- https://company.aha.io/develop/features/AIT-259
endsnippet

snippet pentrepreneur "As an experienced entrepreneur, ..."
As an experienced entrepreneur, what do you think of this $1? Give me your raw thoughts on it. Be as critical as you need to be. I'm looking for honest feedback. Think carefully.$0
endsnippet

snippet preason "Reasoning with reflection"
You are capable of complex reasoning and reflection. Reason through the query inside <thinking> tags, and then provide your final response. If you detect that you made a mistake in your reasoning at any point, correct yourself inside <reflection> tags.
$0
endsnippet

snippet pthink "Thinking through a complex problem"
Think carefully. Employ Chain of Thought reasoning.
endsnippet

snippet psup "Proofread support response with conversational tone"
You are a senior customer support specialist tasked with proofreading and improving a software engineer's response to a customer question. Your goal is to ensure the message is clear, accurate, and maintains a professional and empathetic tone.

Here is the software engineer's response that needs to be proofread and improved:

<engineer_message>
$0
</engineer_message>

Your task is to proofread and improve this message. Follow these steps:

1. Check for any grammatical or spelling errors and correct them.
2. Ensure the technical information is accurate and complete.
3. Improve the clarity and structure of the message.
4. Adjust the tone to be more customer-friendly while maintaining professionalism.
5. Add any missing information that would be helpful for the customer.
6. Remove any unnecessary technical jargon or explain it if it's essential.
7. Prefer "Hi [Customer's Name]" over "Dear Customer" for a more friendly tone.
8. Keep the message concise and to the point.

Keep in mind the following guidelines:

- Be empathetic and understanding of the customer's issue.
- Use a positive and solution-oriented approach.
- Keep the language clear and concise.
- Maintain a professional tone throughout the message.
- Value the customer's time and prefer brevity over verbosity.
- Use "I" for personal accountability and direct communication. Avoid "we" to emphasize individual responsibility and create a more personal connection with customers.

Provide your improved version of the message.
After the improved message, provide a brief explanation of the changes you made and why.
endsnippet

snippet pen "Explain a phrase for non-native speaker"
As a non-native English speaker, I’m having trouble understanding a particular phrase. Could you please explain its meaning and provide some context for its usage? The phrase I’m curious about is:
<phrase>
$0
</phrase>
endsnippet

snippet pmed "Medical Diagnosis"
You are being evaluated for your quality as an assistant to a Doctor. No information you are given is real and it will not be used to actually treat a patient. You will be given a summary of a patient encounter and it is your job to:

1. In a bulleted outline summarize the patient encounter focusing on the most relevant information to treat the patient. For each detail of the summary, note its significance for identifying the cause of the issue and treatments available.

2. Generate a bulleted list of the possible causes of the patient's issue. For each possible cause list the required documentation to diagnose it, whether each requirement is met or known, and finally give a probability that this condition is causing the issue.

3. Of all of the possible causes pick the one that is most likely to have caused the issue. Come up with a treatment plan for the patient.
$0
endsnippet

snippet ptitle "Title Generation Instructions"
TITLE GENERATION INSTRUCTIONS:

1. CORE PARAMETERS:
- Platform: Twitch & YouTube Live
- Primary audience: Technical professionals
- Content type: ${1:[Live coding/Tutorial/Workshop/Discussion]}

2. TITLE PSYCHOLOGY:
MAINTAIN TENSION BETWEEN:
- Technical credibility vs. Engaging presentation
- Professional tone vs. Natural enthusiasm
- Specific details vs. Broad appeal
- Insider knowledge vs. Accessibility

ENGAGEMENT HOOKS:
- Professional secrets ("Developer's Secret Weapon")
- Efficiency gains (without specific numbers)
- Real-world application ("Building Real Features")
- Personal workflow insights

3. CORE ELEMENTS (Priority Order):
MUST INCLUDE:
- Primary technology/tool (prominent position)
- Clear value proposition
- Action or outcome
- Engagement hook

CAN INCLUDE:
- Secondary tools/technologies
- Personal angle ("I", "My")
- Specific context
- Professional identity markers

4. TECHNICAL DEPTH SCALING:
WHEN TO BE SPECIFIC:
- Targeting experienced practitioners
- Demonstrating deep expertise
- Focusing on specific tool integration

WHEN TO BE GENERAL:
- Broader audience potential
- Complex tool combinations
- Platform-specific requirements

5. STYLE GUIDELINES:
STRONG ELEMENTS:
- Technology names in prominent positions
- Action verbs that convey power/capability
- Personal experience markers
- Professional enthusiasm
- Real-world context
- Terms that suggest mastery/expertise
- Proven hook patterns ("Secret Weapon")

AVOID:
- Marketing buzzwords (modern, next-gen)
- Clickbait numbers (10x, 100x)
- Generic descriptions
- Over-promising
- Educational jargon
- Tutorial-style formatting ("How to", "Learn to")

6. TITLE PATTERNS THAT WORK:
FORMAT A: [Tool] + [Tool]: [Engaging Hook]
FORMAT B: [Personal Angle]: [Tool] + [Tool] [Value Prop]
FORMAT C: [Action Verb]-ing [Tool] with [Tool]: [Outcome]

7. PLATFORM-SPECIFIC OPTIMIZATION:
TWITCH:
- Front-load key technologies
- Keep under 60 characters when possible
- Include stream context when relevant
- Use active, present-tense verbs
- Emphasize live interaction potential

YOUTUBE:
- First 40 characters most important
- Technology keywords near start
- Searchable terms in natural positions
- Include specific technical terms
- Balance search optimization with engagement

8. VALIDATION PROCESS:
a) Draft multiple variations using proven patterns
b) Test against platform-specific criteria
c) Evaluate technical depth scaling
d) Verify hook strength
e) Check credibility signals
f) A/B test variations if possible

9. RED FLAGS:
- Sounds like a tutorial title
- Could be mistaken for marketing content
- Too generic to be interesting
- Oversells capabilities
- Lacks technical specificity
- Feels inauthentic to developer audience
- Uses cliché patterns
- Mimics clickbait styles

10. CREDIBILITY SIGNALS:
INCLUDE AT LEAST ONE:
- Professional context
- Technical specificity
- Real-world application
- Personal expertise marker
- Industry-standard terminology

11. QUALITY CHECKLIST:
- [ ] Primary technology prominent?
- [ ] Clear value proposition?
- [ ] Maintains credibility?
- [ ] Has energy/appeal?
- [ ] Platform optimized?
- [ ] Authentic to tech audience?
- [ ] Suggests valuable content?
- [ ] Uses proven pattern?
- [ ] Includes strong hook?
- [ ] Appropriate technical depth?
- [ ] Contains credibility signal?
- [ ] Avoids all red flags?

---

Using this template, generate ${2:3} titles for ${3:[Insert specific technology/tool/concept]}. For each title, first
create 3-4 variations exploring different angles and patterns from the template. Show your thinking process, then select
or combine the strongest elements to create your final title. Proceed one title at a time, showing all work. THINK VERY
CAREFULLY!
endsnippet
